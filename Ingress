정말 중요

ingress 는
service에 외부 URL을 제공
트래픽을 로드밸런싱
SSL/TLS terminate
virtual hostiong을 지정

A는 naver.com으로 들어오면 메인페이지
B는 naver.com/login 으로 들어오면 로그인 페이지로 이동하게 해주는기술


wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.4/deploy/static/provider/baremetal/deploy.yaml     //ingress 컨트롤러

vi deploy.yaml
kubectl apply -f deploy.yaml 
kubectl get pods -n ingress-nginx // 다른 네임스페이스에 작동해서 이렇게 봐야됨

kubectl get namespaces  //네임스페이스 목록 확인가능

kubectl config set-context ingress --cluster=kubernetes --user=kubernetes-admin --namespace=ingress-nginx  //ingress config정보 등록해줌

kubectl config view
kubectl config current-context  //현재 작업공간 확인
kubectl config use-context ingress //ingress로 현재작업공간 바꾸기 
kubectl get pods //하면 작업공간 바뀌어서 ingress의 pod들이 보임


세션유지하려면

annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"

이것만 추가해주면 세션유지가 된다.

인증서 기능 추가 설정
# openssl genrsa -out tls.key 2048
# openssl req -new -x509 -key tls.key -out tls.crt -days 365 -subj /CN=node2.example.com


인증서만드는법
# kubectl create secret tls tls-secret --cert=tls.crt --key=tls.key



완성본
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: marvel-ingress
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
  - hosts:
    secretName: tls-secret
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: marvel-service
          servicePort: 80
      - path: /app
        backend:
          serviceName: appjs-service
          servicePort: 80


완성본 실행하기전에  인증서 만들고 해야함.!!!
 
 ingress 삭제하려면
 kubectl delete ns ingress-nginx //하면 ingress-nginx 네임스페이스를 삭제하여 모든API 리소스를 삭제한다.
 
 
 
 
 
 
 
