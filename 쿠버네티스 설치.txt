vi /etc/sysconfig/network-scripts/ifcfg-ens33
10.0.0.10
각각마다 네트워크 ip 바꾸기
vi /etc/hosts
10.0.0.10   master.example.com  master
10.0.0.11   node1.example.com  node1
10.0.0.12   node2.example.com  node2
10.0.0.5   node3.example.com  node3
vi /etc/hostname
master.example.com


----------------위에꺼는 vm설정---------------------


-----쿠버네티스 설치과정 ------


systemctl stop firewalld
swapoff -a && sed -i 
sudo yum install -y yum-utils
 sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

sudo yum install docker-ce docker-ce-cli containerd.io -y
systemctl start docker
systemctl enable docker

# aws linux2이면 아래 명령어로 도커설치 완료
sudo yum update -y
sudo yum install docker -y
sudo systemctl start docker
sudo systemctl enable docker




cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

sudo systemctl daemon-reload
sudo systemctl restart docker
------------------------------------------한번에 긁어서 설치----
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

# Set SELinux in permissive mode (effectively disabling it)
sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

sudo systemctl enable --now kubelet
----------------------------------여기까지--------------
마스터에서만 실행 
kubeadm init     
하고나서 나오는 kubeadm join ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 를 cat > token.txt 에 복사해서 저장 이값은 node들에게 실행시킬 것임

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"


---------------------위에꺼 5줄 다 마스터에서만----
node1,2에  kubeadm reset 한번하고 보안그룹수정해서 tcp 0-65535 에 리소스값은 vpc의 ip로 넣으면됩니다
그후
kubeadm join 10.0.0.10:6443 --token q6lzwt.xxxxxxxxxxxx \
	--discovery-token-ca-cert-hash sha256:78ee85d8a6xxxxxxxxxxxxxxxxxx5a729359bb7ba7be93bba26

<<위에 줄 node1,2 에다가 붙이기

7. kubectl command 자동완성 기능 추가
yum install -y  bash-completion
source /usr/share/bash-completion/bash_completion

source <(kubectl completion bash)
echo "source <(kubectl completion bash)" >> ~/.bashrc
<<위에 2줄 한번에 복사  의미는 kubectl 명령어 자동완성 기능 활성화 

source <(kubeadm completion bash)
echo "source <(kubeadm completion bash)" >> ~/.bashrc
<<위 명령줄과 같이 kubeadm 만 바뀌었습니다. kubeadm 에서 자동완성기능 사용가능


8. 설치확인
kubectl get nodes
kubectl get nodes -o wide
kubectl describe node node1.example.com
kubectl get pod --all-namespaces
