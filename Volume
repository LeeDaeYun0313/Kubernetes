emptyDir volume

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡvolume-empty.yamlㅡㅡㅡㅡㅡㅡㅡㅡ
apiVersion: v1
kind: Pod
metadata:
  name: dynamic-web
spec:
  containers:
  - image: smlinux/cowsay-web     //cowsay-web 10초마다 메세지를 뿌리는웹 컨테이너
    name: web-generator
    volumeMounts:
    - name: html
      mountPath: /webdata
  - image: nginx:1.14
    name: web-server
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
      readOnly: true
    ports:
    - containerPort: 80
  volumes:
  - name: html
    emptyDir: {}

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡvolume-hostpath-nginx.yamlㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

실행하고
curl ip 해서보면  계속 바뀜





!!hostPath
 -노드의 파일시스템의 디렉토리나 파일을 컨테이너에 마우늩
 -노드에 디렉토리나 파일을 생성하여 마운트 가능


ㅡㅡㅡㅡㅡㅡㅡ
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - image: nginx:1.14
    name: nginx
    ports:
    - containerPort: 80
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
      readOnly: "true"
  volumes:
  - name: html
    hostPath:
      path: /webdata
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
실행했는데 노드1에 생겼고 /webdata 디렉토리가 생겼다 노드1에




!!Shared Volume!!





!!PV(PersistentVolume)!!
 

Capacity: 볼륨의 용량을 정의한다.




Reclaim Policy
persistentVolumeReclaimPolicy
  -Retain: 삭제하지 않고 PV의 내용을 유지한다.
  -Recycle: 재사용이 가능. 재사용 시 데이타의 내용을 자동으로 rm -rf로 삭제한다.
  -Delete: 볼륨의 사용이 끝나면, 해당 볼륨 내용이 삭제됨

AccessModes:
  -ReadWriteOnce :단일 노드에서 읽기/쓰기 마운트 가능
  -ReadOnlyMany : 다수 노드에서 읽기 전용으로 마운트가능
  -ReadWriteMany : 다수 노드에서 읽기/쓰기로 마운트 가능


ㅡㅡㅡㅡpv.yamlㅡㅡㅡㅡ
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv1
spec:
  capacity:
    storage: 500Mi
  accessModes:
  - ReadWriteOnce
  - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /pv1
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

하고 apply로 실행

kubectl get persistentvolume  //확인




!!!!!!!!!!!!PVC(PersistentVolumeClaim)!!!!!!!!!
  볼륨요쳥 

capacity: 볼륨의 용량을 정의한다.

Resources.requests:
  요청하는 storage size를 설정한다. 
  쿠버네티스는 요청하는 디스크 크기에 가장 적합한 pv를 선택해서 할당한다.

AccessModes:
  -ReadWriteOnce :단일 노드에서 읽기/쓰기 마운트 가능
  -ReadOnlyMany : 다수 노드에서 읽기 전용으로 마운트가능
  -ReadWriteMany : 다수 노드에서 읽기/쓰기로 마운트 가능





ㅡㅡㅡpvc.yamlㅡㅡㅡ
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-name
spec:
  resources:
    requests:
      storage: 200Mi
  accessModes:
  - ReadWriteOnce
  - ReadOnlyMany
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ




pv가 준비된후에 pvc로 요청해야함 순서중요
하지만 public cloud에서는 pv가 데이터센터에 준비되어있다고생각하고 pvc만 만들면된다. 디폴트값으로 pvc를 지우면 pv도 지워진다.


ㅡㅡㅡpod.yamlㅡㅡㅡ
apiVersion: v1
kind: Pod
metadata:
  name: pod
spec:
  containers:
  - image: nginx:1.14
    name: web
    volumeMounts:       //컨테이너 안에 /usr/share/nginx/html 에 마운드 시킨다
    - name: html
      mountPath: /usr/share/nginx/html
  volumes:                      //볼륨을 만들고 이름은 html 이고 pvc로 만듬
  - name: html
    persistentVolumeClaim:
      claimName: pvc-web
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ














